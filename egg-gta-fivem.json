{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v1",
        "update_url": null
    },
    "exported_at": "2021-09-19T12:23:29+02:00",
    "name": "FiveM - Eggs",
    "author": "sulivan@open-all.fr",
    "description": "Eggs Pterodactyl - French - Fonctionnel",
    "features": null,
    "images": [
        "quay.io\/parkervcp\/pterodactyl-images:base_debian"
    ],
    "file_denylist": [],
    "startup": "$(pwd)\/alpine\/opt\/cfx-server\/ld-musl-x86_64.so.1 --library-path \"$(pwd)\/alpine\/usr\/lib\/v8\/:$(pwd)\/alpine\/lib\/:$(pwd)\/alpine\/usr\/lib\/\" -- $(pwd)\/alpine\/opt\/cfx-server\/FXServer +set citizen_dir $(pwd)\/alpine\/opt\/cfx-server\/citizen\/ +set sv_licenseKey {{LICENSE_KEY}} +set steam_webApiKey {{STEAM_API}} +set sv_maxplayers {{SLOTS_SERV}} +set serverProfile default +set txAdminPort {{TXADMIN_PORT}} $( [ \"$TXADMIN_ENABLE\" == \"1\" ] || printf %s '+exec server.cfg' )",
    "config": {
        "files": "{\r\n    \"server.cfg\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"endpoint_add_tcp\": \"endpoint_add_tcp \\\"0.0.0.0:{{server.build.default.port}}\\\"\",\r\n            \"endpoint_add_udp\": \"endpoint_add_udp \\\"0.0.0.0:{{server.build.default.port}}\\\"\",\r\n            \"sv_hostname\": \"sv_hostname \\\"{{server.build.env.NOM_SERVEUR}}\\\"\",\r\n            \"set sv_licenseKey\": \"set sv_licenseKey {{server.build.env.LICENSE_KEY}}\",\r\n            \"set steam_webApiKey\": \"set steam_webApiKey {{server.build.env.STEAM_API}}\",\r\n            \"sv_maxclients\": \"sv_maxclients {{server.build.env.SLOTS_SERV}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"succeeded. Welcome!\"\r\n}",
        "logs": "{\r\n    \"custom\": true,\r\n    \"location\": \"logs\/latest.log\"\r\n}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/ash\r\n# FiveM Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\napt update -y\r\napt install -y tar xz-utils curl git file\r\n\r\nmkdir -p \/mnt\/server\/resources\r\n\r\ncd \/mnt\/server\r\n\r\necho \"updating citizenfx resource files\"\r\ngit clone https:\/\/github.com\/citizenfx\/cfx-server-data.git \/tmp\r\ncp -Rf \/tmp\/resources\/* resources\/ \r\n\r\nRELEASE_PAGE=$(curl -sSL https:\/\/runtime.fivem.net\/artifacts\/fivem\/build_proot_linux\/master\/)\r\n\r\nif [ \"${FIVEM_VERSION}\" == \"latest\" ] || [ -z ${FIVEM_VERSION} ] ; then\r\n    LATEST_RECOMMENDED=$(echo -e \"${RELEASE_PAGE}\" | grep \"LATEST RECOMMENDED\" -B1 | grep -Eo '\".*\/*.tar.xz\"' | grep -Eo '\".*\"' | sed 's\/\\\"\/\/g' | sed 's\/\\.\\\/\/\/1' | grep -P '\\d{4}-\\S{40}\\\/fx\\.tar\\.xz')\r\n    DOWNLOAD_LINK=$(echo https:\/\/runtime.fivem.net\/artifacts\/fivem\/build_proot_linux\/master\/${LATEST_RECOMMENDED})\r\nelse\r\n    VERSION_LINK=$(echo -e \"${RELEASE_PAGE}\" | grep -Eo 'href=\".*\/*.tar.xz\"' | grep -Eo '\".*\"' | sed 's\/\\\"\/\/g' | sed 's\/\\.\\\/\/\/1' | grep ${FIVEM_VERSION})\r\n    if [ \"${VERSION_LINK}\" == \"\" ]; then\r\n        echo -e \"defaulting to latest as the version requested was invalid.\"\r\n    else\r\n        DOWNLOAD_LINK=$(echo https:\/\/runtime.fivem.net\/artifacts\/fivem\/build_proot_linux\/master\/${VERSION_LINK})\r\n    fi\r\nfi\r\n\r\nif [ ! -z \"${TEL_URL}\" ]; then \r\n    if curl --output \/dev\/null --silent --head --fail ${TEL_URL}; then\r\n        echo -e \"link is valid. setting download link to ${TEL_URL}\"\r\n        DOWNLOAD_LINK=${TEL_URL}\r\n    else\r\n        echo -e \"link is invalid closing out\"\r\n        exit 2\r\n    fi\r\nfi\r\n\r\necho -e \"Running curl -sSL ${DOWNLOAD_LINK} -o ${DOWNLOAD_LINK##*\/}\"\r\n\r\ncurl -sSL ${DOWNLOAD_LINK} -o ${DOWNLOAD_LINK##*\/}\r\n\r\necho \"Extracting fivem files\"\r\n\r\nFILETYPE=$(file -F ',' ${DOWNLOAD_LINK##*\/} | cut -d',' -f2 | cut -d' ' -f2)\r\nif [ \"$FILETYPE\" == \"gzip\" ]; then\r\n    tar xzvf ${DOWNLOAD_LINK##*\/}\r\nelif [ \"$FILETYPE\" == \"Zip\" ]; then\r\n    unzip ${DOWNLOAD_LINK##*\/}\r\nelif [ \"$FILETYPE\" == \"XZ\" ]; then\r\n    tar xvf ${DOWNLOAD_LINK##*\/}\r\nelse\r\n    echo -e \"unknown filetype. Exiting\"\r\n    exit 2 \r\nfi\r\n\r\nrm -rf ${DOWNLOAD_LINK##*\/} run.sh\r\n\r\nif [ -e server.cfg ]; then\r\n    echo \"server config file exists\"\r\nelse\r\n    echo \"Downloading default fivem config\"\r\n    curl https:\/\/raw.githubusercontent.com\/parkervcp\/eggs\/master\/game_eggs\/gta\/fivem\/server.cfg >> server.cfg\r\nfi\r\n\r\nmkdir logs\/\r\n\r\necho \"install complete\"",
            "container": "debian:buster-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "License FiveM",
            "description": "Démarrer un serveur avec une clé FiveM(Obligatoirement) : https:\/\/keymaster.fivem.net\/",
            "env_variable": "LICENSE_KEY",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:32"
        },
        {
            "name": "Slots Maximum",
            "description": "Choisir le nombre de slots que votre serveurs GTA peux acceuillir",
            "env_variable": "SLOTS_SERV",
            "default_value": "32",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer|between:32,1024"
        },
        {
            "name": "Nom du serveur",
            "description": "Le nom qui afficher sur la lists des serveurs FiveM",
            "env_variable": "NOM_SERVEUR",
            "default_value": "Serveur FiveM",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string"
        },
        {
            "name": "Version de FiveM",
            "description": "https:\/\/runtime.fivem.net\/artifacts\/fivem\/build_proot_linux\/master\/",
            "env_variable": "FIVEM_VERSION",
            "default_value": "3977",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|string|max:50"
        },
        {
            "name": "Liens de téléchargement repositoire",
            "description": "Exemple : \r\nhttps:\/\/runtime.fivem.net\/artifacts\/fivem\/build_proot_linux\/master\/1626-8c06e8bc3ed7e6690c6c2d9e0b90e29df65b3ea6\/fx.tar.xz",
            "env_variable": "TEL_URL",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable"
        },
        {
            "name": "Clé API Steam",
            "description": "Chercher la ici : https:\/\/steamcommunity.com\/dev\/apikey\/",
            "env_variable": "STEAM_API",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string"
        },
        {
            "name": "Port TxAdmin",
            "description": "Le port pour le panneau txAdmin",
            "env_variable": "TXADMIN_PORT",
            "default_value": "40120",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|string|max:20"
        },
        {
            "name": "Activer ou non le port",
            "description": "1 = activer \r\n\r\n 0 = désactiver",
            "env_variable": "TXADMIN_ENABLE",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|bool"
        }
    ]
}
